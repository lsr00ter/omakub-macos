# Initialize common development tools (zsh versions)

# Mise (formerly rtx) - development environment manager
if command -v mise &> /dev/null; then
  eval "$(mise activate zsh)"
fi

# Zoxide - smarter cd command
if command -v zoxide &> /dev/null; then
  eval "$(zoxide init zsh)"
fi

# fzf - fuzzy finder with key bindings
if command -v fzf &> /dev/null; then
  # macOS Homebrew fzf integration with fallback
  if [[ -f "$HOMEBREW_PREFIX/opt/fzf/shell/completion.zsh" ]]; then
    source "$HOMEBREW_PREFIX/opt/fzf/shell/completion.zsh"
  elif [[ -f "/usr/local/opt/fzf/shell/completion.zsh" ]]; then
    source "/usr/local/opt/fzf/shell/completion.zsh"
  fi
  
  if [[ -f "$HOMEBREW_PREFIX/opt/fzf/shell/key-bindings.zsh" ]]; then
    source "$HOMEBREW_PREFIX/opt/fzf/shell/key-bindings.zsh"
  elif [[ -f "/usr/local/opt/fzf/shell/key-bindings.zsh" ]]; then
    source "/usr/local/opt/fzf/shell/key-bindings.zsh"
  fi
  
  # Custom fzf options
  export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'
  export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi

# Starship prompt (alternative to simple prompt)
# Uncomment if you prefer starship over the simple prompt
# if command -v starship &> /dev/null; then
#   eval "$(starship init zsh)"
# fi

# iTerm2 shell integration (macOS specific)
if [[ -f "$HOME/.iterm2_shell_integration.zsh" ]]; then
  source "$HOME/.iterm2_shell_integration.zsh"
fi

# GitHub CLI completion
if command -v gh &> /dev/null; then
  eval "$(gh completion -s zsh)"
fi

# Docker completion
if command -v docker &> /dev/null; then
  # Check if docker completion is available via Homebrew
  if [[ -f "$HOMEBREW_PREFIX/share/zsh/site-functions/_docker" ]]; then
    # Completion is handled by compinit
    :
  fi
fi

# Load any additional local customizations
if [[ -f "$HOME/.zshrc.local" ]]; then
  source "$HOME/.zshrc.local"
fi

# macOS-specific environment variables
export EDITOR='nvim'
export VISUAL='nvim'
export PAGER='less'
export LESS='-R'

# Set language environment
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Increase ulimit for development
ulimit -n 65536

# Node.js and npm configuration
export NPM_CONFIG_PREFIX="$HOME/.npm-global"
export PATH="$NPM_CONFIG_PREFIX/bin:$PATH"

# Python configuration
export PYTHONDONTWRITEBYTECODE=1

# Go configuration
if command -v go &> /dev/null; then
  export GOPATH="$HOME/go"
  export PATH="$GOPATH/bin:$PATH"
fi

# Rust configuration
if [[ -f "$HOME/.cargo/env" ]]; then
  source "$HOME/.cargo/env"
fi